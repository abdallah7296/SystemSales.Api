// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemSales.infrastructure.Context;

#nullable disable

namespace SystemSales.infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240711225636_intail")]
    partial class intail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SystemSales.Data.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.CustomerTransactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Customer_Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Debit")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_Invoice_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("record_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("voucher_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("voucher_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Customer_Code");

                    b.ToTable("customerTransactions");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.Guarantor", b =>
                {
                    b.Property<string>("GuarantorCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GuarantorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NationalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GuarantorCode");

                    b.HasIndex("SubCustomerCode");

                    b.ToTable("Guarantors");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.MainCurrency", b =>
                {
                    b.Property<string>("MainCurrencyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CollectionCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecimalCategoryPlural")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("NumberDecimalPoints")
                        .HasColumnType("int");

                    b.Property<string>("SingleCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingleDecimalCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MainCurrencyCode");

                    b.ToTable("mainCurrencies");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.MainCustomer", b =>
                {
                    b.Property<string>("MainCustomerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommercialRegister")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enterprise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mainCurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MainCustomerCode");

                    b.HasIndex("mainCurrencyCode");

                    b.ToTable("mainCustomers");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.NoteGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NoteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubCustomerCode");

                    b.ToTable("noteGroups");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.SubCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConversionFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCurrencyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainCurrencyCode");

                    b.ToTable("subCurrencies");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.SubCustomer", b =>
                {
                    b.Property<string>("SubCustomerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MainAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainCustomerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberDayDept")
                        .HasColumnType("int");

                    b.Property<string>("SaleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellingPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCustomerPhone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCustomerCode");

                    b.HasIndex("MainCustomerCode");

                    b.ToTable("subCustomers");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.CustomerTransactions", b =>
                {
                    b.HasOne("SystemSales.Data.Entities.SubCustomer", "SubCustomer")
                        .WithMany()
                        .HasForeignKey("Customer_Code");

                    b.Navigation("SubCustomer");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.Guarantor", b =>
                {
                    b.HasOne("SystemSales.Data.Entities.SubCustomer", "SubCustomer")
                        .WithMany("guarantors")
                        .HasForeignKey("SubCustomerCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCustomer");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.MainCustomer", b =>
                {
                    b.HasOne("SystemSales.Data.Entities.MainCurrency", "mainCurrency")
                        .WithMany()
                        .HasForeignKey("mainCurrencyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mainCurrency");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.NoteGroups", b =>
                {
                    b.HasOne("SystemSales.Data.Entities.SubCustomer", "SubCustomer")
                        .WithMany("noteGroups")
                        .HasForeignKey("SubCustomerCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCustomer");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.SubCurrency", b =>
                {
                    b.HasOne("SystemSales.Data.Entities.MainCurrency", "mainCurrency")
                        .WithMany("subCurrencies")
                        .HasForeignKey("MainCurrencyCode");

                    b.Navigation("mainCurrency");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.SubCustomer", b =>
                {
                    b.HasOne("SystemSales.Data.Entities.MainCustomer", null)
                        .WithMany("SubCustomerList")
                        .HasForeignKey("MainCustomerCode");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.MainCurrency", b =>
                {
                    b.Navigation("subCurrencies");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.MainCustomer", b =>
                {
                    b.Navigation("SubCustomerList");
                });

            modelBuilder.Entity("SystemSales.Data.Entities.SubCustomer", b =>
                {
                    b.Navigation("guarantors");

                    b.Navigation("noteGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
